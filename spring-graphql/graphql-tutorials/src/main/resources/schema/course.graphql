scalar Url
scalar Date
scalar NonNegativeInt
scalar DateTime

union SmartSearchResult = Book | Hello

type Query{
    allHellos: [Hello]
    oneHello: Hello
    books(author: String): [Book]
    booksByRelesed(inputReleased: ReleaseHistoryInput): [Book]
    mobileApps(mobileAppFilter: MobileAppFilter): [MobileApp]
    pets(petFilter: PetFilter): [Pet]
    smartSearch(keyword: String): [SmartSearchResult]
    additionalDataRequest: String

    me: User!
    problemLatestList: [Problem!]
    itemSearch(filter: SearchItemFilter): [SearchableItem]
    problemDetail(id: ID!): Problem

    makeTourRequest(request: TourOperatorRequest): [TourElement]
}

type Mutation{
    addHello(helloInput: HelloInput!): Int
    replaceHello(helloInput: HelloInput): [Hello]
    deleteHello(index: Int!): Int

    userCreate(user: UserCreateInput): UserResponse!
    userLogin(user: UserLoginInput): UserResponse!
    userActivation(user: UserActivationInput): UserActivationResponse!
    problemCreate(problem: ProblemCreateInput): ProblemResponse!
    solutionCreate(solution: SolutionCreateInput): SolutionResponse!
    solutionVote(vote: SolutionVoteInput): SolutionResponse!

}

type Subscription{
    randomStock: Stock
    problemAdded: Problem!
    solutionVoteChanged(solutionId:ID!): Solution!
}